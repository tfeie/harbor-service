allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    ext {
        profile=project.hasProperty('profile')? (project['profile']==""?"dev":project['profile']) : "dev"
        moduleVersion = "1.0-SNAPSHOT"
        builtBy = "gradle 2.2"
   	 	publishUserName = "theie"
    	publishUserPassword = "theie123"
    	publishURL = "http://123.57.17.96:8081/nexus/content/repositories/snapshots/"
        mavenPublicURL = "http://123.57.17.96:8081/nexus/content/groups/public/"
    }
    compileJava.dependsOn clean
    sourceCompatibility = 1.7

    configurations.all { resolutionStrategy.cacheChangingModulesFor 0, 'seconds' }
    group="com.the.harbor.api"
}

subprojects {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories { maven { url mavenPublicURL } }

    sourceSets {
        main {
            java {
                srcDirs = [
                        'src/main/java'
                ]
            }
            resources { srcDirs = ['src/main/resources']}
        }
        test {
            java {
                srcDirs = [
                        'src/test/java'
                ]
            }
            resources { srcDirs = ['src/test/resources']}
        }
    }

    dependencies {
        compile "com.the.harbor.base:harbor-base:1.0-SNAPSHOT" 
        compile 'org.mortbay.jetty:jetty:6.1.26'
    }
}

project("harbor-api") {
    project.ext {
        appName = "harbor-api"
        apiDir =  "src/main/java/com/the/harbor/api/"
    }

    jar {
        baseName appName
        version moduleVersion
        manifest {
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }
    publish.dependsOn build
}

project("harbor-core") {
    project.ext { appName = "harbor-core" }

    jar {
        baseName appName
        version moduleVersion
        include "com/the/harbor/*/**"
        manifest {
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
        }
    }
}

jar {
    baseName baseName
    version moduleVersion
    destinationDir file("$buildDir/m-libs/")
    manifest {
        attributes 'packageName': baseName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}

configure(subprojects) { subproject ->
    task sourcesJar(type: Jar, dependsOn:classes) { from sourceSets.main.output }
    artifacts { archives sourcesJar }
}
task copySubProjectsJar(type: Copy) {
    subprojects.each { subproject ->
        from subproject.jar
        destinationDir file("$buildDir/libs/core-libs")
    }
}
task copy3rdJars(type: Copy) {
    subprojects.each { subproject ->
        from subproject.configurations.runtime
        destinationDir file("$buildDir/libs/3rd-libs")
    }
}

task copySubProjectsConfig(type: Copy) {
    subprojects.each { subproject ->
        from subproject.fileTree(dir: 'src/main/resources')+subproject.fileTree(dir: 'profile/'+profile)
        destinationDir file("$buildDir/config")
    }
}

task zipLibs(type: Zip) {
    baseName "libs"
    from "$buildDir/libs"
}

task zipConfig(type: Zip) {
    baseName "config"
    from "$buildDir/config"
}


build.dependsOn copySubProjectsJar,copy3rdJars,copySubProjectsConfig
